/*!
 * Multiselect v2.1.1
 * http://crlcu.github.io/multiselect/
 *
 * Copyright (c) 2015 Adrian Crisan
 * Licensed under the MIT license (https://github.com/crlcu/multiselect/blob/master/LICENSE)
 */
if ("undefined" == typeof jQuery) throw new Error("multiselect requires jQuery");
! function(t) {
    "use strict";
    var e = t.fn.jquery.split(" ")[0].split(".");
    if (e[0] < 2 && e[1] < 7) throw new Error("multiselect requires jQuery version 1.7 or higher")
}(jQuery),
function(t) {
    "function" == typeof define && define.amd ? define(["jquery"], t) : t(jQuery)
}(function(t) {
    "use strict";
    var e = function(t) {
        function e(e, o) {
            var n = e.prop("id");
            this.left = e, this.right = t(t(o.right).length ? o.right : "#" + n + "_to"), this.actions = {
                leftAll: t(t(o.leftAll).length ? o.leftAll : "#" + n + "_leftAll"),
                rightAll: t(t(o.rightAll).length ? o.rightAll : "#" + n + "_rightAll"),
                leftSelected: t(t(o.leftSelected).length ? o.leftSelected : "#" + n + "_leftSelected"),
                rightSelected: t(t(o.rightSelected).length ? o.rightSelected : "#" + n + "_rightSelected"),
                undo: t(t(o.undo).length ? o.undo : "#" + n + "_undo"),
                redo: t(t(o.redo).length ? o.redo : "#" + n + "_redo")
            }, delete o.leftAll, delete o.leftSelected, delete o.right, delete o.rightAll, delete o.rightSelected, this.options = {
                keepRenderingSort: o.keepRenderingSort
            }, delete o.keepRenderingSort, this.callbacks = o, this.init()
        }
        return e.prototype = {
            undoStack: [],
            redoStack: [],
            init: function() {
                var e = this;
                e.options.keepRenderingSort && (e.skipInitSort = !0, e.callbacks.sort = function(e, o) {
                    return t(e).data("position") > t(o).data("position") ? 1 : -1
                }, e.left.find("option").each(function(e, o) {
                    t(o).data("position", e)
                })), "function" == typeof e.callbacks.startUp && e.callbacks.startUp(e.left, e.right), e.skipInitSort || "function" != typeof e.callbacks.sort || (e.left.find("option").sort(e.callbacks.sort).appendTo(e.left), e.right.each(function(o, n) {
                    t(n).find("option").sort(e.callbacks.sort).appendTo(n)
                })), e.events(e.actions)
            },
            events: function(e) {
                var o = this;
                o.left.on("dblclick", "option", function(t) {
                    t.preventDefault(), o.moveToRight(this, t)
                }), o.right.on("dblclick", "option", function(t) {
                    t.preventDefault(), o.moveToLeft(this, t)
                }), o.right.closest("form").on("submit", function() {
                    o.left.children().prop("selected", !0), o.right.children().prop("selected", !0)
                }), (navigator.userAgent.match(/MSIE/i) || navigator.userAgent.indexOf("Trident/") > 0 || navigator.userAgent.indexOf("Edge/") > 0) && (o.left.dblclick(function() {
                    e.rightSelected.trigger("click")
                }), o.right.dblclick(function() {
                    e.leftSelected.trigger("click")
                })), e.rightSelected.on("click", function(e) {
                    e.preventDefault();
                    var n = o.left.find("option:selected");
                    n && o.moveToRight(n, e), t(this).blur()
                }), e.leftSelected.on("click", function(e) {
                    e.preventDefault();
                    var n = o.right.find("option:selected");
                    n && o.moveToLeft(n, e), t(this).blur()
                }), e.rightAll.on("click", function(e) {
                    e.preventDefault();
                    var n = o.left.find("option");
                    n && o.moveToRight(n, e), t(this).blur()
                }), e.leftAll.on("click", function(e) {
                    e.preventDefault();
                    var n = o.right.find("option");
                    n && o.moveToLeft(n, e), t(this).blur()
                }), e.undo.on("click", function(t) {
                    t.preventDefault(), o.undo(t)
                }), e.redo.on("click", function(t) {
                    t.preventDefault(), o.redo(t)
                })
            },
            moveToRight: function(t, e, o, n) {
                var i = this;
                return "function" == typeof i.callbacks.moveToRight ? i.callbacks.moveToRight(i, t, e, o, n) : "function" != typeof i.callbacks.beforeMoveToRight || o || i.callbacks.beforeMoveToRight(i.left, i.right, t) ? (i.right.append(t), n || (i.undoStack.push(["right", t]), i.redoStack = []), "function" != typeof i.callbacks.sort || o || i.right.find("option").sort(i.callbacks.sort).appendTo(i.right), "function" != typeof i.callbacks.afterMoveToRight || o || i.callbacks.afterMoveToRight(i.left, i.right, t), i) : !1
            },
            moveToLeft: function(t, e, o, n) {
                var i = this;
                return "function" == typeof i.callbacks.moveToLeft ? i.callbacks.moveToLeft(i, t, e, o, n) : "function" != typeof i.callbacks.beforeMoveToLeft || o || i.callbacks.beforeMoveToLeft(i.left, i.right, t) ? (i.left.append(t), n || (i.undoStack.push(["left", t]), i.redoStack = []), "function" != typeof i.callbacks.sort || o || i.left.find("option").sort(i.callbacks.sort).appendTo(i.left), "function" != typeof i.callbacks.afterMoveToLeft || o || i.callbacks.afterMoveToLeft(i.left, i.right, t), i) : !1
            },
            undo: function(t) {
                var e = this,
                    o = e.undoStack.pop();
                if (o) switch (e.redoStack.push(o), o[0]) {
                    case "left":
                        e.moveToRight(o[1], t, !1, !0);
                        break;
                    case "right":
                        e.moveToLeft(o[1], t, !1, !0)
                }
            },
            redo: function(t) {
                var e = this,
                    o = e.redoStack.pop();
                if (o) switch (e.undoStack.push(o), o[0]) {
                    case "left":
                        e.moveToLeft(o[1], t, !1, !0);
                        break;
                    case "right":
                        e.moveToRight(o[1], t, !1, !0)
                }
            }
        }, e
    }(t);
    t.multiselect = {
        defaults: {
            startUp: function(t, e) {
                e.find("option").each(function(e, o) {
                    t.find('option[value="' + o.value + '"]').remove()
                })
            },
            beforeMoveToRight: function() {
                return !0
            },
            afterMoveToRight: function() {},
            beforeMoveToLeft: function() {
                return !0
            },
            afterMoveToLeft: function() {},
            sort: function(t, e) {
                return "NA" == t.innerHTML ? 1 : "NA" == e.innerHTML ? -1 : t.innerHTML > e.innerHTML ? 1 : -1
            }
        }
    }, t.fn.multiselect = function(o) {
        return this.each(function() {
            var n = t(this),
                i = n.data(),
                l = t.extend({}, t.multiselect.defaults, i, o);
            return new e(n, l)
        })
    }
});